
#daemon off;
#user  nobody;
worker_processes  2;

#error_log  logs/error.log debug;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile           on;
    keepalive_timeout  65;

    upstream memcached {
        server 127.0.0.1:11211;

        keepalive 1024;
    }

    server {
        listen       80;
        server_name  localhost;

        location / {
            secure_cookie $cookie_SECURE_SESSION,$cookie_SECURE_EXPIRES;
            secure_cookie_md5 private_secure_key$binary_remote_addr$cookie_SECURE_EXPIRES;

            if ($secure_cookie = "") {
                add_header Set-Cookie "ORIGIN_URI=$request_uri;";
                rewrite .* /captcha.html redirect;
            }

            if ($secure_cookie = "0") {
                add_header Set-Cookie "ORIGIN_URI=$request_uri;";
                rewrite .* /captcha.html redirect;
            }

            root   html;
            index  index.html index.htm;
        }

        location = /captcha.html {
            root html;
        }

        location = /retry_captcha.html {
            root html;
        }

        location = /captcha.jpg {
            default_type 'image/jpeg';

            secure_cookie_expires  600;
            secure_cookie_md5 private_captcha_key$binary_remote_addr$secure_cookie_set_expires_base64;
            secure_cookie_md5_to_number $secure_cookie_set_md5;

            set $number $secure_cookie_md5_number;

            content_by_lua '
            local n = ngx.var.number
            index = n % 10000

            local res_key = ngx.location.capture("/memc",
                { args = { cmd = "get", key = index } }
            )

            ngx.exec("/memc_img", { cmd = "get", key = res_key.body })
            ';
        }

        location /verify {
            default_type 'text/html';

            secure_cookie $cookie_CAPTCHA_SESSION,$cookie_CAPTCHA_EXPIRES;
            secure_cookie_md5 private_captcha_key$binary_remote_addr$cookie_CAPTCHA_EXPIRES;
            secure_cookie_md5_to_number $cookie_CAPTCHA_SESSION;

            lua_need_request_body on;
            client_max_body_size 1k;
            client_body_buffer_size 1k;

            if ($secure_cookie = "") {
                return 403;
            }

            if ($secure_cookie = "0") {
                rewrite .* /captcha.html redirect;
            }

            set $number $secure_cookie_md5_number;

            content_by_lua '
            local n = ngx.var.number
            index = n % 10000

            local res = ngx.location.capture("/memc",
                { args = { cmd = "get", key = index } }
            )

            local key = ""

            if res.status == 200 then
                key = res.body
            else
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end

            local args = ngx.req.get_post_args()
            response = args["response"]

            response = string.lower(response)
            key = string.lower(key)

            if response == key then 
               ngx.exec("@set_secure_cookie")
            else
               ngx.redirect("/retry_captcha.html")
            end
            ';
        }

        location @set_secure_cookie {
            secure_cookie_expires 1d; 
            secure_cookie_md5 private_secure_key$binary_remote_addr$secure_cookie_set_expires_base64;

            add_header Set-Cookie "SECURE_SESSION=$secure_cookie_set_md5; expires=$secure_cookie_set_expires;";
            add_header Set-Cookie "SECURE_EXPIRES=$secure_cookie_set_expires_base64; expires=$secure_cookie_set_expires;";

            set $redirect_page "/";

            if ($cookie_ORIGIN_URI) {
                set $redirect_page $cookie_ORIGIN_URI;
            }

            #return the original request uri
            rewrite ^.*$ $redirect_page redirect;

            return 302;
        }

        location /memc {
            internal;

            set $memc_cmd $arg_cmd;
            set $memc_key $arg_key;

            memc_pass memcached;
        }

	    location /memc_img {
            internal;

            default_type 'image/jpeg';

            secure_cookie_expires  600;
            secure_cookie_md5 private_captcha_key$binary_remote_addr$secure_cookie_set_expires_base64;
            secure_cookie_md5_to_number $secure_cookie_set_md5;

            add_header Set-Cookie "CAPTCHA_SESSION=$secure_cookie_set_md5; expires=$secure_cookie_set_expires;";
            add_header Set-Cookie "CAPTCHA_EXPIRES=$secure_cookie_set_expires_base64; expires=$secure_cookie_set_expires;";

            set $memc_cmd $arg_cmd;
            set $memc_key $arg_key;

            memc_pass memcached;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
